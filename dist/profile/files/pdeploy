#!/usr/bin/env bash

### - Bash Strict mode - ###
set -euo pipefail
IFS=$'\n\t'
### - Bash Strict mode - ###

lockfile='/var/run/puppetlabs/pdeploy.lock'
papply_lockfile='/var/run/puppetlabs/apply.lock'
pupadir='/var/cache/pupa'
envdir='/etc/puppetlabs/code/environments'

function timestamp {
  # Current time including UTC offset
  date +'%H:%M:%S %z'
}

function log {
  echo "$(timestamp) ${@}"
}

if test -f '/var/cache/pupa/disable-pdeploy'; then
  log "pdeploy: disabled since $(stat -c %y /var/cache/pupa/disable-pdeploy), not running" >&2
  exit 1
fi

function update_checkout {
  log "git: resetting pupa checkout"
  git --git-dir="${pupadir}/.git" --work-tree="${pupadir}" reset --hard HEAD
  log "git: updating pupa checkout"
  git --git-dir="${pupadir}/.git" --work-tree="${pupadir}" pull
}

function r10k_deploy {
  log "r10k: resetting environment: ${1}"
  git --git-dir="${envdir}/${1}/.git" --work-tree="${envdir}/${1}" reset --hard HEAD
  log "r10k: deploying environment: ${1}"
  /usr/local/bin/r10k deploy environment "${1}" -pv
}

function puppet_apply {
  log "puppet: applying catalog for environment: ${1}"
  /usr/local/bin/papply "${@}"
}

if test $# -lt 1; then
  env='production'
elif test "${1:0:1}" == '-'; then
  env='production'
else
  env=${1}
  shift 1
fi


if (set -o noclobber; echo "$$" > "${lockfile}") 2> /dev/null; then
  if test ! -f "${papply_lockfile}"; then
    trap 'rm -f "${lockfile}"; exit $?' INT TERM EXIT
    log "pdeploy: deploying: ${env}"
    update_checkout "${env}"
    r10k_deploy "${env}"
    puppet_apply "${env}" "${@}"
    log "pdeploy: done deploying: ${env}"
    rm -f "${lockfile}"
    trap - INT TERM EXIT
    exit 0
  else
    log: "pdeploy: Cannot run, there already is a 'puppet apply' in progress" >&2
    exit 1
  fi
else
  log "pdeploy: Cannot run, process with PID: $(cat ${lockfile}) holds lockfile at ${lockfile}" >&2
  exit 1
fi
